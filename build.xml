<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<project name="jCobraChat" default="deploy" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<property environment="env" />
	<property name="warName" value="jCobraChat" />
	<property name="organization" value="org.ryyaan2004" />
	<property name="ivy.version" value="2.4.0" />
	<property name="project.version" value="0.2.0" />
	<property file="project.properties" />
	
	<property name="dist.dir" value="dist" />
	<property name="build.dir" value="build" />
	<property name="build.dir.lib" value="${build.dir}/lib" />
	<property name="lib.dir" value="${basedir}/lib" />
	
	<property name="JBOSS_HOME" value="${env.JBOSS_HOME}" />
	<property name="ivy.home" value="${env.IVY_HOME}" />
	<property name="oauth.path" value="${env.OAUTH_DIR}/${warName}/oauth.properties" />

	<property name="jboss.deploy.dir" value="standalone/deployments" />
	<property name="deployed.war" value="${JBOSS_HOME}/${jboss.deploy.dir}/${warName}.war" />
	<property name="src.dir" location="src/org/ryyaan2004"/>
	<property name="classes.dir" location="${build.dir}/classes"/>
	<property name="ivy.reports.dir" location="${build.dir}/ivy-reports"/>
	
	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant">
		<classpath>
			<fileset dir="${ivy.home}">
				<include name="*.jar"/>
			</fileset>
		</classpath>
	</taskdef>
	
	<ivy:settings/>
	
	<target name="init">
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir.lib}" />
		<mkdir dir="${build.dir}/WebContent/WEB-INF/lib" />
		
		<ivy:resolve/>
		<ivy:retrieve pattern="${build.dir}/WebContent/WEB-INF/lib/[artifact]-[revision].[ext]" 
			file="ivy.xml" type="jar" conf="runtime"/>
		
		<ivy:retrieve pattern="lib/[artifact]-[revision].[ext]" file="ivy.xml" type="jar" />
		
		<ivy:report todir="${ivy.reports.dir}" graph="false" xml="false"/>
		
		<ivy:cachepath pathid="compile.path" conf="compile"/>
		<ivy:cachepath pathid="runtime.path" conf="runtime"/>
	</target>
	
	<condition property="isLinux">
	                    <os family="unix" />
 	</condition>
	
	<condition property="isWindows">
						<os family="windows" />
	</condition>
	
	<target name="compile" depends="init">
		<javac destdir="${build.dir}/classes" debug="true" srcdir="src" target="1.7">
			<classpath refid="compile.path" />
		</javac>
	</target>
			
	<target name="oauth-linux" if="isLinux">
		<copy file="/build-secret/${warName}/oauth.properties" todir="WebContent/WEB-INF/classes" />
		<!-- <copy todir="WebContent/WEB-INF/lib" >
			<fileset dir="/build-lib/${warName}"/>
		</copy> -->
	</target>
	
	<target name="oauth-win" if="isWindows" >
		<copy file="D:\java\inc\oauth.properties" todir="${build.dir}/WebContent/WEB-INF/classes" />
	</target>
	
	<target name="copy-oauth" >
		<copy file="${oauth.path}" todir="${build.dir}/WebContent/WEB-INF/classes" />
    </target>
		
	<target name="build" depends="clean,compile, copy-oauth">
		<tstamp>
			<format property="build.time" pattern="MM/dd/yyyy HH:mm " />
		</tstamp>
		<exec executable="git" outputproperty="git.branch">
			<arg value="rev-parse"/>
			<arg value="--abbrev-ref"/>
			<arg value="HEAD"/>
		</exec>
		
		<copy todir="${build.dir}/WebContent" >
			<fileset dir="WebContent" />
		</copy>
		
		<propertyfile file="${build.dir}/WebContent/project.properties"
			comment="This file is auto generated by ant">
		<entry key="build.time" value="${build.time}" />
		<entry key="git.branch" value="${git.branch}" />
		<entry key="build.user" value="${env.COMPUTERNAME}" />
		<entry key="build.os" value ="${os.name}_${os.version}" />
		<entry key="user" value="${user.name}" />
		</propertyfile>
		


	</target>
		
	<target name="war" depends="build">
		<war destfile="${dist.dir}/${warName}.war" webxml="${build.dir}/WebContent/WEB-INF/web.xml">
			<fileset dir="${build.dir}/WebContent"/>
			<classes dir="${build.dir}/classes"/>
		</war>
	</target>
	
	<!-- deploy to jboss -->
	<target name="clean">
		<delete dir="dist"/>
		<delete dir="build"/>
	</target>
	
	<target name="deploy" depends="war, publish">
		<!-- remove currently deployed war -->
		<delete file="/${deployed.war}.deployed" failonerror="false" />
		<waitfor maxwait="10" maxwaitunit="second">
			<available file="/${deployed.war}.undeployed"/>
		</waitfor>

		<!-- copy war file to deployment directory-->
		<delete file="/${deployed.war}" failonerror="false" />
		<delete dir="/${deployed.war}" failonerror="false" />
		<copy file="${dist.dir}/${warName}.war" todir="/${JBOSS_HOME}/${jboss.deploy.dir}" />
		
		<!-- start deployment process -->
		<echo>start deployment ...</echo>
		<touch file="/${deployed.war}.dodeploy" />
		
		<!-- wait for deployment completion -->
		<waitfor maxwait="10" maxwaitunit="second">
			<available file="/${deployed.war}.deployed" />
		</waitfor>
		<echo>deployment complete!</echo>
	</target>
	 
	<target name="publish" description="publish jar to the local repo" depends="war">
		<ivy:publish resolver="local" >
			<artifacts pattern="${dist.dir}/[artifact].[ext]" />
		</ivy:publish>
	</target>
</project>